name: "Build, Lint & Test"

on:
  push:
    branches: [main, production]
  pull_request:
    branches: [main, production]

jobs:
  install-dependencies:
    name: "Install Dependencies"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      ## Uncomment this section if you want to use a specific version of NodeJS
      # - name: Setup NodeJS
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18
      #     cache: yarn
      - name: Cache Dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            **/node_modules
          key: dependencies-${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}-v1
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install

  build:
    name: Build
    needs: [install-dependencies]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      ## Uncomment this section if you want to use a specific version of NodeJS
      # - name: Setup NodeJS
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18
      #     cache: yarn
      - name: Cache Dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            **/node_modules
          key: dependencies-${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}-v1
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            **/.next
            **/dist
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}-v1
      - name: Build
        run: yarn build
        if: steps.cache-build.outputs.cache-hit != 'true'

  lint:
    name: Lint
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      ## Uncomment this section if you want to use a specific version of NodeJS
      # - name: Setup NodeJS
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18
      #     cache: yarn
      - name: Cache Dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            **/node_modules
          key: dependencies-${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}-v1
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            **/.next
            **/dist
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}-v1
      - name: Build
        run: yarn build
        if: steps.cache-build.outputs.cache-hit != 'true'
      - name: Run Linting Checks
        run: yarn lint

  vitest:
    name: Unit & Integration Tests
    needs: [build]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      ## Uncomment this section if you want to use a specific version of NodeJS
      # - name: Setup NodeJS
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18
      #     cache: yarn
      - name: Cache Dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            **/node_modules
          key: dependencies-${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}-v1
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            **/.next
            **/dist
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}-v1
      - name: Build
        run: yarn build
        if: steps.cache-build.outputs.cache-hit != 'true'
      - name: Run Unit and Integration Tests
        run: yarn test
      - name: "Report Coverage"
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-tests-results
          path: |
            coverage/

  playwright:
    name: E2E Tests
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      ## Uncomment this section if you want to use a specific version of NodeJS
      # - name: Setup NodeJS
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18
      #     cache: yarn
      - name: Cache Dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            **/node_modules
          key: dependencies-${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}-v1
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            **/.next
            **/dist
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}-v1
      - name: Build
        run: yarn build
        if: steps.cache-build.outputs.cache-hit != 'true'
      - name: Install Playwright Browsers
        run: npx playwright install chromium
      - name: Run tests
        run: xvfb-run yarn test:e2e
        if: env.GIT_DIFF
      - uses: actions/upload-artifact@v3
        with:
          name: e2e-tests-results
          if: always()
          path: |
            **/playwright-report/
